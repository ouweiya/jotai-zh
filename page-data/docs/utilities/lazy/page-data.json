{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utilities/lazy","result":{"data":{"mdx":{"slug":"utilities/lazy","frontmatter":{"title":"Lazy","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Lazy\",\n  \"nav\": 3.03,\n  \"keywords\": \"lazy,initialize,init,loading\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5F53\\u5B9A\\u4E49\\u539F\\u59CB\\u539F\\u5B50\\u65F6\\uFF0C\\u5B83\\u4EEC\\u7684\\u521D\\u59CB\\u503C\\u5FC5\\u987B\\u5728\\u5B9A\\u4E49\\u65F6\\u7ED1\\u5B9A\\u3002\\n\\u5982\\u679C\\u521B\\u5EFA\\u521D\\u59CB\\u503C\\u7684\\u8BA1\\u7B97\\u6210\\u672C\\u5F88\\u9AD8\\uFF0C\\u6216\\u8005\\u5728\\u5B9A\\u4E49\\u65F6\\u65E0\\u6CD5\\u8BBF\\u95EE\\u8BE5\\u503C\\uFF0C\\n\\u6700\\u597D\\u5C06\\u539F\\u5B50\\u7684\\u521D\\u59CB\\u5316\\u63A8\\u8FDF\\u5230\\u5176\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#using-multiple-stores\"\n  }, \"\\u5728\\u5B58\\u50A8\\u4E2D\\u9996\\u6B21\\u4F7F\\u7528\"), \"\\u65F6\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const imageDataAtom = atom(initializeExpensiveImage()) // 1) \\u5FC5\\u987B\\u5728\\u6B64\\u5904\\u8BA1\\u7B97\\n\\nfunction Home() {\\n  ...\\n}\\n\\nfunction ImageEditor() {\\n  // 2) \\u4EC5\\u5728\\u6B64\\u8DEF\\u7531\\u4E2D\\u4F7F\\u7528\\n  const [imageData, setImageData] = useAtom(imageDataAtom);\\n  ...\\n}\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <Route path=\\\"/\\\" component={Home} />\\n      <Route path=\\\"/edit\\\" component={ImageEditor} />\\n    </Router>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"atomWithLazy {#atomwithlazy}\"), mdx(\"p\", null, \"\\u53C2\\u8003\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/pull/2465\"\n  }, \"https://github.com/pmndrs/jotai/pull/2465\")), mdx(\"p\", null, \"\\u6211\\u4EEC\\u53EF\\u4EE5\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithLazy\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u539F\\u59CB\\u539F\\u5B50\\uFF0C\\u5176\\u521D\\u59CB\\u503C\\u5C06\\u5728\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#using-multiple-stores\"\n  }, \"\\u5728\\u5B58\\u50A8\\u4E2D\\u9996\\u6B21\\u4F7F\\u7528\"), \"\\u65F6\\u8BA1\\u7B97\\u3002\\n\\u521D\\u59CB\\u5316\\u540E\\uFF0C\\u5B83\\u5C06\\u50CF\\u5E38\\u89C4\\u539F\\u59CB\\u539F\\u5B50\\u4E00\\u6837\\u8FD0\\u884C\\uFF08\\u53EF\\u4EE5\\u5199\\u5165\\uFF09\\u3002\"), mdx(\"h3\", null, \"\\u4F7F\\u7528\\u65B9\\u6CD5 {#usage}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atomWithLazy } from 'jotai/utils'\\n\\n// \\u4F20\\u9012\\u521D\\u59CB\\u5316\\u51FD\\u6570\\nconst imageDataAtom = atomWithLazy(initializeExpensiveImage)\\n\\nfunction Home() {\\n  ...\\n}\\n\\nfunction ImageEditor() {\\n  // \\u53EA\\u6709\\u5F53\\u7528\\u6237\\u8BBF\\u95EE `/edit` \\u65F6\\u624D\\u4F1A\\u521D\\u59CB\\u5316\\u3002\\n  const [imageData, setImageData] = useAtom(imageDataAtom);\\n  ...\\n}\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <Route path=\\\"/\\\" component={Home} />\\n      <Route path=\\\"/edit\\\" component={ImageEditor} />\\n    </Router>\\n  )\\n}\\n\")), mdx(\"h3\", null, \"\\u4F7F\\u7528\\u591A\\u4E2A\\u5B58\\u50A8 {#using-multiple-stores}\"), mdx(\"p\", null, \"\\u7531\\u4E8E\\u6BCF\\u4E2A\\u5B58\\u50A8\\u90FD\\u662F\\u5176\\u72EC\\u7ACB\\u7684\\u5B87\\u5B99\\uFF0C\\u521D\\u59CB\\u503C\\u5C06\\u5728\\u6BCF\\u4E2A\\u5B58\\u50A8\\u4E2D\\u6070\\u597D\\u91CD\\u65B0\\u521B\\u5EFA\\u4E00\\u6B21\\uFF08\\u9664\\u975E\\u4F7F\\u7528\\u50CF \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-scope\"), \" \\u8FD9\\u6837\\u7684\\u4E1C\\u897F\\uFF0C\\u5B83\\u5C06\\u5B58\\u50A8\\u5206\\u88C2\\u6210\\u66F4\\u5C0F\\u7684\\u5B87\\u5B99\\uFF09\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type RGB = [number, number, number];\\n\\nfunction randomRGB(): RGB {\\n  ...\\n}\\n\\nconst lift = (value: number) => ([r, g, b]: RGB) => {\\n  return [r + value, g + value, b + value]\\n}\\n\\nconst colorAtom = lazyAtom(randomRGB)\\n\\nlet store = createStore()\\n\\nconsole.log(store.get(colorAtom)) // [0, 36, 128]\\nstore.set(colorAtom, lift(8))\\nconsole.log(store.get(colorAtom)) // [8, 44, 136]\\n\\n// \\u91CD\\u65B0\\u521B\\u5EFA\\u5B58\\u50A8\\uFF0C\\u6709\\u65F6\\u5728\\u6CE8\\u9500\\u6216\\u4EE5\\u67D0\\u79CD\\u65B9\\u5F0F\\u91CD\\u7F6E\\u5E94\\u7528\\u7A0B\\u5E8F\\u65F6\\u5B8C\\u6210\\nstore = createStore()\\n\\nconsole.log(store.get(colorAtom)) // [255, 12, 46] -- \\u4E00\\u4E2A\\u65B0\\u7684\\u968F\\u673A\\u989C\\u8272\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"dfd915e5-8b41-55ba-bd2c-ac25e228883b","slug":"utilities/lazy","__params":{"slug":"utilities"}}},"staticQueryHashes":["171421096","930225796"]}