{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utilities/split","result":{"data":{"mdx":{"slug":"utilities/split","frontmatter":{"title":"Split","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Split\",\n  \"nav\": 3.99,\n  \"keywords\": \"select\",\n  \"published\": false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"splitAtom {#splitatom}\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splitAtom\"), \" \\u5DE5\\u5177\\u5728\\u4F60\\u60F3\\u8981\\u83B7\\u53D6\\u5217\\u8868\\u4E2D\\u6BCF\\u4E2A\\u5143\\u7D20\\u7684\\u539F\\u5B50\\u65F6\\u975E\\u5E38\\u6709\\u7528\\u3002\\n\\u5B83\\u9002\\u7528\\u4E8E\\u5305\\u542B\\u5217\\u8868\\u7684\\u8BFB/\\u5199\\u539F\\u5B50\\u3002\\u5728\\u8FD9\\u6837\\u7684\\u539F\\u5B50\\u4E0A\\u4F7F\\u7528\\u65F6\\uFF0C\\u5B83\\u8FD4\\u56DE\\u4E00\\u4E2A\\u539F\\u5B50\\uFF0C\\n\\u8BE5\\u539F\\u5B50\\u672C\\u8EAB\\u5305\\u542B\\u4E00\\u4E2A\\u539F\\u5B50\\u5217\\u8868\\uFF0C\\u6BCF\\u4E2A\\u539F\\u5B50\\u5BF9\\u5E94\\u4E8E\\u539F\\u59CB\\u5217\\u8868\\u4E2D\\u7684\\u76F8\\u5E94\\u9879\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u4E2A\\u7B80\\u5316\\u7684\\u7C7B\\u578B\\u7B7E\\u540D\\u53EF\\u80FD\\u662F\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type SplitAtom = <Item>(arrayAtom: PrimitiveAtom<Array<Item>>): Atom<Array<PrimitiveAtom<Item>>>\\n\")), mdx(\"p\", null, \"\\u6B64\\u5916\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splitAtom\"), \" \\u8FD4\\u56DE\\u7684\\u539F\\u5B50\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"write\"), \" \\u65B9\\u5411\\u5305\\u542B\\u4E00\\u4E2A\\u8C03\\u5EA6\\u51FD\\u6570\\uFF08\\u81EA v1.6.4 \\u8D77\\uFF09\\uFF0C\\n\\u8FD9\\u5728\\u4F60\\u60F3\\u8981\\u4E00\\u79CD\\u7B80\\u5355\\u7684\\u65B9\\u5F0F\\u6765\\u4FEE\\u6539\\u539F\\u59CB\\u539F\\u5B50\\u7684\\u64CD\\u4F5C\\uFF0C\\u5982\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remove\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"insert\"), \"\\u548C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"move\"), \"\\u65F6\\u975E\\u5E38\\u6709\\u7528\\u3002\"), mdx(\"p\", null, \"\\u8BF7\\u53C2\\u9605\\u4E0B\\u9762\\u7684\\u793A\\u4F8B\\u4EE5\\u4E86\\u89E3\\u4F7F\\u7528\\u65B9\\u6CD5\\u3002\"), mdx(\"h3\", null, \"Codesandbox {#codesandbox}\"), mdx(CodeSandbox, {\n    id: \"s4hvgo\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Provider, atom, useAtom, PrimitiveAtom } from 'jotai'\\nimport { splitAtom } from 'jotai/utils'\\nimport './styles.css'\\n\\nconst initialState = [\\n  {\\n    task: 'help the town',\\n    done: false,\\n  },\\n  {\\n    task: 'feed the dragon',\\n    done: false,\\n  },\\n]\\n\\nconst todosAtom = atom(initialState)\\nconst todoAtomsAtom = splitAtom(todosAtom)\\n\\ntype TodoType = (typeof initialState)[number]\\n\\nconst TodoItem = ({\\n  todoAtom,\\n  remove,\\n}: {\\n  todoAtom: PrimitiveAtom<TodoType>\\n  remove: () => void\\n}) => {\\n  const [todo, setTodo] = useAtom(todoAtom)\\n  return (\\n    <div>\\n      <input\\n        value={todo.task}\\n        onChange={(e) => {\\n          setTodo((oldValue) => ({ ...oldValue, task: e.target.value }))\\n        }}\\n      />\\n      <input\\n        type=\\\"checkbox\\\"\\n        checked={todo.done}\\n        onChange={() => {\\n          setTodo((oldValue) => ({ ...oldValue, done: !oldValue.done }))\\n        }}\\n      />\\n      <button onClick={remove}>remove</button>\\n    </div>\\n  )\\n}\\n\\nconst TodoList = () => {\\n  const [todoAtoms, dispatch] = useAtom(todoAtomsAtom)\\n  return (\\n    <ul>\\n      {todoAtoms.map((todoAtom) => (\\n        <TodoItem\\n          todoAtom={todoAtom}\\n          remove={() => dispatch({ type: 'remove', atom: todoAtom })}\\n        />\\n      ))}\\n    </ul>\\n  )\\n}\\n\\nconst App = () => (\\n  <Provider>\\n    <TodoList />\\n  </Provider>\\n)\\n\\nexport default App\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"e8179f05-4c2e-50ae-bb9e-7383511018a6","slug":"utilities/split","__params":{"slug":"utilities"}}},"staticQueryHashes":["171421096","930225796"]}