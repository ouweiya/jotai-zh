{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utilities/family","result":{"data":{"mdx":{"slug":"utilities/family","frontmatter":{"title":"Family","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Family\",\n  \"nav\": 3.5,\n  \"keywords\": \"family\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"atomFamily {#atomfamily}\"), mdx(\"p\", null, \"\\u53C2\\u8003\\uFF1A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/issues/23\"\n  }, \"https://github.com/pmndrs/jotai/issues/23\")), mdx(\"h3\", null, \"\\u4F7F\\u7528\\u65B9\\u6CD5 {#usage}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"atomFamily(initializeAtom, areEqual): (param) => Atom\\n\")), mdx(\"p\", null, \"\\u8FD9\\u5C06\\u521B\\u5EFA\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u63A5\\u53D7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"param\"), \" \\u5E76\\u8FD4\\u56DE\\u4E00\\u4E2A\\u539F\\u5B50\\u3002\\n\\u5982\\u679C\\u5B83\\u5DF2\\u7ECF\\u88AB\\u521B\\u5EFA\\uFF0C\\u5B83\\u5C06\\u4ECE\\u7F13\\u5B58\\u4E2D\\u8FD4\\u56DE\\u3002\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"initializeAtom\"), \" \\u662F\\u4E00\\u4E2A\\u53EF\\u4EE5\\u8FD4\\u56DE\\u4EFB\\u4F55\\u7C7B\\u578B\\u7684\\u539F\\u5B50\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atom()\"), \"\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithDefault()\"), \"\\uFF0C...\\uFF09\\u7684\\u51FD\\u6570\\u3002\\n\\u6CE8\\u610F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"areEqual\"), \" \\u662F\\u53EF\\u9009\\u7684\\uFF0C\\u5B83\\u544A\\u8BC9\\u4E24\\u4E2A\\u53C2\\u6570\\u662F\\u5426\\u76F8\\u7B49\\uFF08\\u9ED8\\u8BA4\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.is\"), \"\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u8981\\u590D\\u5236 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://recoiljs.org/docs/api-reference/utils/atomFamily\"\n  }, \"Recoil's atomFamily/selectorFamily\"), \" \\u7684\\u7C7B\\u4F3C\\u884C\\u4E3A\\uFF0C\\n\\u8BF7\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"areEqual\"), \" \\u6307\\u5B9A\\u4E00\\u4E2A deepEqual \\u51FD\\u6570\\u3002\\u4F8B\\u5982\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atom } from 'jotai'\\nimport { atomFamily } from 'jotai/utils'\\nimport deepEqual from 'fast-deep-equal'\\n\\nconst fooFamily = atomFamily((param) => atom(param), deepEqual)\\n\")), mdx(\"h3\", null, \"TypeScript {#typescript}\"), mdx(\"p\", null, \"\\u539F\\u5B50\\u65CF\\u7684\\u7C7B\\u578B\\u5C06\\u4ECE initializeAtom \\u4E2D\\u63A8\\u65AD\\u51FA\\u6765\\u3002\\u8FD9\\u662F\\u4E00\\u4E2A\\u4F7F\\u7528\\u539F\\u59CB\\u539F\\u5B50\\u7684\\u5178\\u578B\\u7528\\u6CD5\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import type { PrimitiveAtom } from 'jotai'\\n\\n/**\\n * \\u8FD9\\u91CC\\u7684 atom(id) \\u8FD4\\u56DE\\u4E00\\u4E2A PrimitiveAtom<number>\\n * \\u800C PrimitiveAtom<number> \\u662F\\u4E00\\u4E2A WritableAtom<number, SetStateAction<number>>\\n */\\nconst myFamily = atomFamily((id: number) => atom(id)).\\n\")), mdx(\"p\", null, \"\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528 TypeScript \\u6CDB\\u578B\\u660E\\u786E\\u58F0\\u660E\\u53C2\\u6570\\u3001\\u503C\\u548C\\u539F\\u5B50\\u7684 setState \\u51FD\\u6570\\u7684\\u7C7B\\u578B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"atomFamily<Param, Value, Update>(initializeAtom: (param: Param) => WritableAtom<Value, Update>, areEqual?: (a: Param, b: Param) => boolean)\\natomFamily<Param, Value>(initializeAtom: (param: Param) => Atom<Value>, areEqual?: (a: Param, b: Param) => boolean)\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u4F60\\u60F3\\u4E3A\\u539F\\u59CB\\u539F\\u5B50\\u660E\\u786E\\u58F0\\u660E atomFamily\\uFF0C\\u4F60\\u9700\\u8981\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SetStateAction\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type SetStateAction<Value> = Value | ((prev: Value) => Value)\\n\\nconst myFamily = atomFamily<number, number, SetStateAction<number>>(\\n  (id: number) => atom(id),\\n)\\n\")), mdx(\"h3\", null, \"\\u6CE8\\u610F\\uFF1A\\u5185\\u5B58\\u6CC4\\u6F0F {#caveat:-memory-leaks}\"), mdx(\"p\", null, \"\\u5728\\u5185\\u90E8\\uFF0CatomFamily \\u53EA\\u662F\\u4E00\\u4E2A Map\\uFF0C\\u5176\\u952E\\u662F param\\uFF0C\\u5176\\u503C\\u662F\\u539F\\u5B50\\u914D\\u7F6E\\u3002\\n\\u9664\\u975E\\u4F60\\u660E\\u786E\\u5730\\u5220\\u9664\\u672A\\u4F7F\\u7528\\u7684\\u53C2\\u6570\\uFF0C\\u5426\\u5219\\u8FD9\\u5C06\\u5BFC\\u81F4\\u5185\\u5B58\\u6CC4\\u6F0F\\u3002\\n\\u5982\\u679C\\u4F60\\u4F7F\\u7528\\u65E0\\u9650\\u6570\\u91CF\\u7684\\u53C2\\u6570\\uFF0C\\u8FD9\\u662F\\u81F3\\u5173\\u91CD\\u8981\\u7684\\u3002\"), mdx(\"p\", null, \"\\u6709\\u4E24\\u79CD\\u65B9\\u6CD5\\u53EF\\u4EE5\\u5220\\u9664\\u53C2\\u6570\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"myFamily.remove(param)\"), \" \\u5141\\u8BB8\\u4F60\\u5220\\u9664\\u7279\\u5B9A\\u7684\\u53C2\\u6570\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"myFamily.setShouldRemove(shouldRemove)\"), \" \\u662F\\u6CE8\\u518C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shouldRemove\"), \" \\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u7ACB\\u5373\\u8FD0\\u884C\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\u5E76\\u4E14\"), \"\\u5F53\\u4F60\\u8981\\u4ECE\\u7F13\\u5B58\\u4E2D\\u83B7\\u53D6\\u539F\\u5B50\\u65F6\\u3002\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shouldRemove \\u662F\\u4E00\\u4E2A\\u63A5\\u53D7\\u4E24\\u4E2A\\u53C2\\u6570 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createdAt\"), \"\\uFF08\\u4EE5\\u6BEB\\u79D2\\u4E3A\\u5355\\u4F4D\\uFF09\\u548C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"param\"), \"\\uFF0C\\u5E76\\u8FD4\\u56DE\\u4E00\\u4E2A\\u5E03\\u5C14\\u503C\\u7684\\u51FD\\u6570\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u8BBE\\u7F6E \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"null\"), \" \\u5C06\\u5220\\u9664\\u5148\\u524D\\u6CE8\\u518C\\u7684\\u51FD\\u6570\\u3002\")))), mdx(\"h3\", null, \"\\u793A\\u4F8B {#examples}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atom } from 'jotai'\\nimport { atomFamily } from 'jotai/utils'\\n\\nconst todoFamily = atomFamily((name) => atom(name))\\n\\ntodoFamily('foo')\\n// \\u8FD9\\u5C06\\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 atom('foo')\\uFF0C\\u6216\\u8005\\u5982\\u679C\\u5DF2\\u7ECF\\u521B\\u5EFA\\uFF0C\\u5219\\u8FD4\\u56DE\\u5B83\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atom } from 'jotai'\\nimport { atomFamily } from 'jotai/utils'\\n\\nconst todoFamily = atomFamily((name) =>\\n  atom(\\n    (get) => get(todosAtom)[name],\\n    (get, set, arg) => {\\n      const prev = get(todosAtom)\\n      set(todosAtom, { ...prev, [name]: { ...prev[name], ...arg } })\\n    },\\n  ),\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atom } from 'jotai'\\nimport { atomFamily } from 'jotai/utils'\\n\\nconst todoFamily = atomFamily(\\n  ({ id, name }) => atom({ name }),\\n  (a, b) => a.id === b.id,\\n)\\n\")), mdx(\"h3\", null, \"Codesandbox {#codesandbox}\"), mdx(CodeSandbox, {\n    id: \"huxd4i\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"518391f5-71c5-5886-af58-71e32311310d","slug":"utilities/family","__params":{"slug":"utilities"}}},"staticQueryHashes":["171421096","930225796"]}