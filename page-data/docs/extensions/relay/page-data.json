{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/extensions/relay","result":{"data":{"mdx":{"slug":"extensions/relay","frontmatter":{"title":"Relay","description":"This doc describes Relay extension."},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Relay\",\n  \"description\": \"This doc describes Relay extension.\",\n  \"nav\": 4.98,\n  \"keywords\": \"relay\",\n  \"published\": false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u4F60\\u53EF\\u4EE5\\u5C06 Jotai \\u4E0E \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev\"\n  }, \"Relay\"), \" \\u4E00\\u8D77\\u4F7F\\u7528\\u3002\"), mdx(\"h3\", null, \"\\u5B89\\u88C5 {#install}\"), mdx(\"p\", null, \"\\u4F60\\u9700\\u8981\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-relay\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"relay-runtime\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm i jotai-relay relay-runtime\\n\")), mdx(\"h3\", null, \"\\u4F7F\\u7528 {#usage}\"), mdx(\"p\", null, \"\\u67E5\\u770B \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/\"\n  }, \"Relay \\u6587\\u6863\"), \" \\u4EE5\\u4E86\\u89E3\\u57FA\\u7840\\u77E5\\u8BC6\\u4EE5\\u53CA\\u5982\\u4F55\\u63D0\\u524D\\u4F7F\\u7528\\u7F16\\u8BD1\\u5668\\u3002\"), mdx(\"h3\", null, \"atomWithQuery {#atomwithquery}\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithQuery\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/fetch-query/\"\n  }, \"fetchQuery\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 atom\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React, { Suspense } from 'react'\\nimport { Provider, useAtom } from 'jotai'\\nimport { useHydrateAtoms } from 'jotai/utils'\\nimport { environmentAtom, atomWithQuery } from 'jotai-relay'\\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime'\\nimport graphql from 'babel-plugin-relay/macro'\\n\\nconst myEnvironment = new Environment({\\n  network: Network.create(async (params, variables) => {\\n    const response = await fetch('https://countries.trevorblades.com/', {\\n      method: 'POST',\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n      body: JSON.stringify({\\n        query: params.text,\\n        variables,\\n      }),\\n    })\\n    return response.json()\\n  }),\\n  store: new Store(new RecordSource()),\\n})\\n\\nconst countriesAtom = atomWithQuery(\\n  graphql`\\n    query AppCountriesQuery {\\n      countries {\\n        name\\n      }\\n    }\\n  `,\\n  () => ({}),\\n)\\n\\nconst Main = () => {\\n  const [data] = useAtom(countriesAtom)\\n  return (\\n    <ul>\\n      {data.countries.map(({ name }) => (\\n        <li key={name}>{name}</li>\\n      ))}\\n    </ul>\\n  )\\n}\\n\\nconst HydrateAtoms = ({ children }) => {\\n  useHydrateAtoms([[environmentAtom, myEnvironment]])\\n  return children\\n}\\n\\nconst App = () => {\\n  return (\\n    <Provider>\\n      <HydrateAtoms>\\n        <Suspense fallback=\\\"Loading...\\\">\\n          <Main />\\n        </Suspense>\\n      </HydrateAtoms>\\n    </Provider>\\n  )\\n}\\n\")), mdx(\"h4\", null, \"\\u793A\\u4F8B {#examples}\"), mdx(CodeSandbox, {\n    id: \"cxc6p5\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h3\", null, \"atomWithMutation {#atomwithmutation}\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithMutation\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/commit-mutation/\"\n  }, \"commitMutation\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 atom\\u3002\"), mdx(\"p\", null, \"\\u5F85\\u4FEE\\u590D\\uFF1A\\u6DFB\\u52A0\\u4EE3\\u7801\\u793A\\u4F8B\\u548C codesandbox\"), mdx(\"h3\", null, \"atomWithSubscription {#atomwithsubscription}\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithSubscription\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/request-subscription/\"\n  }, \"requestSubscription\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 atom\\u3002\"), mdx(\"p\", null, \"\\u5F85\\u4FEE\\u590D\\uFF1A\\u6DFB\\u52A0\\u4EE3\\u7801\\u793A\\u4F8B\\u548C codesandbox\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"d93643f9-aa53-504d-bff4-2a2be2aa57b2","slug":"extensions/relay","__params":{"slug":"extensions"}}},"staticQueryHashes":["171421096","930225796"]}