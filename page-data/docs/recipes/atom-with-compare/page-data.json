{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/atom-with-compare","result":{"data":{"mdx":{"slug":"recipes/atom-with-compare","frontmatter":{"title":"atomWithCompare","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"atomWithCompare\",\n  \"nav\": 8.05,\n  \"keywords\": \"creators,compare\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithCompare\"), \"\\u521B\\u5EFA\\u4E00\\u4E2A\\u539F\\u5B50\\uFF0C\\u5F53\\u81EA\\u5B9A\\u4E49\\u6BD4\\u8F83\\u51FD\\u6570\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"areEqual(prev, next)\"), \"\\u4E3A\\u5047\\u65F6\\u89E6\\u53D1\\u66F4\\u65B0\\u3002\")), mdx(\"p\", null, \"\\u8FD9\\u53EF\\u4EE5\\u5E2E\\u52A9\\u4F60\\u901A\\u8FC7\\u5FFD\\u7565\\u5BF9\\u4F60\\u7684\\u5E94\\u7528\\u7A0B\\u5E8F\\u65E0\\u5173\\u7D27\\u8981\\u7684\\u72B6\\u6001\\u53D8\\u5316\\uFF0C\\u907F\\u514D\\u4E0D\\u5FC5\\u8981\\u7684\\u91CD\\u65B0\\u6E32\\u67D3\\u3002\"), mdx(\"p\", null, \"\\u6CE8\\u610F\\uFF1AJotai\\u5728\\u53D1\\u751F\\u53D8\\u5316\\u65F6\\u5185\\u90E8\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.is\"), \"\\u6765\\u6BD4\\u8F83\\u503C\\u3002\\u5982\\u679C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"areEqual(a, b)\"), \"\\u8FD4\\u56DE\\u5047\\uFF0C\\u4F46\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.is(a, b)\"), \"\\u8FD4\\u56DE\\u771F\\uFF0CJotai\\u5C06\\u4E0D\\u4F1A\\u89E6\\u53D1\\u66F4\\u65B0\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { atomWithReducer } from 'jotai/utils'\\n\\nexport function atomWithCompare<Value>(\\n  initialValue: Value,\\n  areEqual: (prev: Value, next: Value) => boolean,\\n) {\\n  return atomWithReducer(initialValue, (prev: Value, next: Value) => {\\n    if (areEqual(prev, next)) {\\n      return prev\\n    }\\n\\n    return next\\n  })\\n}\\n\")), mdx(\"p\", null, \"\\u8FD9\\u662F\\u4F60\\u5982\\u4F55\\u4F7F\\u7528\\u5B83\\u6765\\u521B\\u5EFA\\u4E00\\u4E2A\\u5FFD\\u7565\\u6D45\\u76F8\\u7B49\\u66F4\\u65B0\\u7684\\u539F\\u5B50\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { atomWithCompare } from 'XXX'\\nimport { shallowEquals } from 'YYY'\\nimport { CSSProperties } from 'react'\\n\\nconst styleAtom = atomWithCompare<CSSProperties>(\\n  { backgroundColor: 'blue' },\\n  shallowEquals,\\n)\\n\")), mdx(\"p\", null, \"\\u5728\\u4E00\\u4E2A\\u7EC4\\u4EF6\\u4E2D\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const StylePreview = () => {\\n  const [styles, setStyles] = useAtom(styleAtom)\\n\\n  return (\\n    <div>\\n      <div styles={styles}>Style preview</div>\\n\\n      {/* \\u70B9\\u51FB\\u8FD9\\u4E2A\\u6309\\u94AE\\u4E24\\u6B21\\u53EA\\u4F1A\\u89E6\\u53D1\\u4E00\\u6B21\\u6E32\\u67D3 */}\\n      <button onClick={() => setStyles({ ...styles, backgroundColor: 'red' })}>\\n        \\u8BBE\\u7F6E\\u80CC\\u666F\\u4E3A\\u7EA2\\u8272\\n      </button>\\n\\n      {/* \\u70B9\\u51FB\\u8FD9\\u4E2A\\u6309\\u94AE\\u4E24\\u6B21\\u53EA\\u4F1A\\u89E6\\u53D1\\u4E00\\u6B21\\u6E32\\u67D3 */}\\n      <button onClick={() => setStyles({ ...styles, fontSize: 32 })}>\\n        \\u653E\\u5927\\u5B57\\u4F53\\n      </button>\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"ac5b2711-4234-54c7-8b1a-eff60f991fa2","slug":"recipes/atom-with-compare","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}