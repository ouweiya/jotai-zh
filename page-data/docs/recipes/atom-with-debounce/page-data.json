{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/atom-with-debounce","result":{"data":{"mdx":{"slug":"recipes/atom-with-debounce","frontmatter":{"title":"atomWithDebounce","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"atomWithDebounce\",\n  \"nav\": 8.1,\n  \"keywords\": \"creators,debounce\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithDebounce\"), \"\\u5E2E\\u52A9\\u521B\\u5EFA\\u4E00\\u4E2A\\u72B6\\u6001\\u8BBE\\u7F6E\\u5E94\\u88AB\\u9632\\u6296\\u7684\\u539F\\u5B50\\u3002\")), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u5DE5\\u5177\\u5BF9\\u4E8E\\u6587\\u672C\\u641C\\u7D22\\u8F93\\u5165\\u5F88\\u6709\\u7528\\uFF0C\\u4F60\\u53EF\\u80FD\\u5E0C\\u671B\\u5728\\u7B49\\u5F85\\u4E00\\u6BB5\\u65F6\\u95F4\\u540E\\u53EA\\u8C03\\u7528\\u4E00\\u6B21\\u6D3E\\u751F\\u539F\\u5B50\\u4E2D\\u7684\\u51FD\\u6570\\uFF0C\\u800C\\u4E0D\\u662F\\u5728\\u6BCF\\u6B21\\u6309\\u952E\\u65F6\\u89E6\\u53D1\\u4E00\\u4E2A\\u52A8\\u4F5C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { atom, SetStateAction } from 'jotai'\\n\\nexport default function atomWithDebounce<T>(\\n  initialValue: T,\\n  delayMilliseconds = 500,\\n  shouldDebounceOnReset = false,\\n) {\\n  const prevTimeoutAtom = atom<ReturnType<typeof setTimeout> | undefined>(\\n    undefined,\\n  )\\n\\n  // \\u4E0D\\u8981\\u5BFC\\u51FAcurrentValueAtom\\uFF0C\\u56E0\\u4E3A\\u4F7F\\u7528\\u8FD9\\u4E2A\\u539F\\u5B50\\u6765\\u8BBE\\u7F6E\\u72B6\\u6001\\u53EF\\u80FD\\u4F1A\\u5BFC\\u81F4\\n  // currentValueAtom\\u548CdebouncedValueAtom\\u4E4B\\u95F4\\u7684\\u72B6\\u6001\\u4E0D\\u4E00\\u81F4\\n  const _currentValueAtom = atom(initialValue)\\n  const isDebouncingAtom = atom(false)\\n\\n  const debouncedValueAtom = atom(\\n    initialValue,\\n    (get, set, update: SetStateAction<T>) => {\\n      clearTimeout(get(prevTimeoutAtom))\\n\\n      const prevValue = get(_currentValueAtom)\\n      const nextValue =\\n        typeof update === 'function'\\n          ? (update as (prev: T) => T)(prevValue)\\n          : update\\n\\n      const onDebounceStart = () => {\\n        set(_currentValueAtom, nextValue)\\n        set(isDebouncingAtom, true)\\n      }\\n\\n      const onDebounceEnd = () => {\\n        set(debouncedValueAtom, nextValue)\\n        set(isDebouncingAtom, false)\\n      }\\n\\n      onDebounceStart()\\n\\n      if (!shouldDebounceOnReset && nextValue === initialValue) {\\n        onDebounceEnd()\\n        return\\n      }\\n\\n      const nextTimeoutId = setTimeout(() => {\\n        onDebounceEnd()\\n      }, delayMilliseconds)\\n\\n      // \\u8BBE\\u7F6E\\u524D\\u4E00\\u4E2A\\u8D85\\u65F6\\u539F\\u5B50\\uFF0C\\u4EE5\\u9632\\u9700\\u8981\\u6E05\\u9664\\u5B83\\n      set(prevTimeoutAtom, nextTimeoutId)\\n    },\\n  )\\n\\n  // \\u5BFC\\u51FA\\u539F\\u5B50\\u8BBE\\u7F6E\\u5668\\u4EE5\\u4FBF\\u5728\\u9700\\u8981\\u65F6\\u6E05\\u9664\\u8D85\\u65F6\\n  const clearTimeoutAtom = atom(null, (get, set, _arg) => {\\n    clearTimeout(get(prevTimeoutAtom))\\n    set(isDebouncingAtom, false)\\n  })\\n\\n  return {\\n    currentValueAtom: atom((get) => get(_currentValueAtom)),\\n    isDebouncingAtom,\\n    clearTimeoutAtom,\\n    debouncedValueAtom,\\n  }\\n}\\n\")), mdx(\"h3\", null, \"\\u6CE8\\u610F\\u4E8B\\u9879 {#caveat}\"), mdx(\"p\", null, \"\\u8BF7\\u6CE8\\u610F\\uFF0C\\u8FD9\\u4E2A\\u539F\\u5B50\\u4E0EReact 18\\u4E2D\\u7684\\u5E76\\u53D1\\u7279\\u6027\\u5982\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useTransition\"), \"\\u548C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useDeferredValue\"), \"\\u6709\\u4E0D\\u540C\\u7684\\u76EE\\u6807\\uFF0C\\u540E\\u8005\\u7684\\u4E3B\\u8981\\u76EE\\u6807\\u662F\\u9632\\u6B62\\u56E0\\u6602\\u8D35\\u7684\\u66F4\\u65B0\\u800C\\u963B\\u585E\\u4E0E\\u9875\\u9762\\u7684\\u4EA4\\u4E92\\u3002\"), mdx(\"p\", null, \"\\u66F4\\u591A\\u4FE1\\u606F\\uFF0C\\u8BF7\\u9605\\u8BFB\\u8FD9\\u4E2Agithub\\u8BA8\\u8BBA\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reactwg/react-18/discussions/41%EF%BC%8C%E5%9C%A8%E6%A0%87%E9%A2%98%E4%B8%BA**%22How\"\n  }, \"https://github.com/reactwg/react-18/discussions/41\\uFF0C\\u5728\\u6807\\u9898\\u4E3A**\\\"How\"), \" is it different from setTimeout?\\\"**\\u7684\\u90E8\\u5206\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\\u7528\\u6CD5 {#example-usage}\"), mdx(\"p\", null, \"\\u4E0B\\u9762\\u7684\\u6C99\\u7BB1\\u94FE\\u63A5\\u5C55\\u793A\\u4E86\\u6211\\u4EEC\\u5982\\u4F55\\u4F7F\\u7528\\u6D3E\\u751F\\u539F\\u5B50\\u6765\\u6839\\u636E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"debouncedValueAtom\"), \"\\u7684\\u503C\\u83B7\\u53D6\\u72B6\\u6001\\u3002\"), mdx(\"p\", null, \"\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<SearchInput>\"), \"\\u4E2D\\u8F93\\u5165\\u4E00\\u4E2A\\u5B9D\\u53EF\\u68A6\\u7684\\u540D\\u5B57\\u65F6\\uFF0C\\u6211\\u4EEC\\u4E0D\\u4F1A\\u5728\\u6BCF\\u4E2A\\u5B57\\u6BCD\\u4E0A\\u53D1\\u9001\\u4E00\\u4E2Aget\\u8BF7\\u6C42\\uFF0C\\u800C\\u53EA\\u6709\\u5728\\u6700\\u540E\\u4E00\\u6B21\\u6587\\u672C\\u8F93\\u5165\\u540E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"delayMilliseconds\"), \"\\u5DF2\\u7ECF\\u8FC7\\u53BB\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u51CF\\u5C11\\u4E86\\u5BF9\\u670D\\u52A1\\u5668\\u7684\\u540E\\u7AEF\\u8BF7\\u6C42\\u7684\\u6570\\u91CF\\u3002\"), mdx(CodeSandbox, {\n    id: \"cjrz2y\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9104501a-c3c9-52b3-9ae3-e6144844eed1","slug":"recipes/atom-with-debounce","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}