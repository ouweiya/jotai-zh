{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/use-reducer-atom","result":{"data":{"mdx":{"slug":"recipes/use-reducer-atom","frontmatter":{"title":"useReducerAtom","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"useReducerAtom\",\n  \"nav\": 8.11,\n  \"keywords\": \"reducer, hook, useReducerAtom\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useReducerAtom\"), \" \\u662F\\u4E00\\u4E2A\\u81EA\\u5B9A\\u4E49\\u94A9\\u5B50\\uFF0C\\u7528\\u4E8E\\u5C06 reducer \\u5E94\\u7528\\u4E8E\\u539F\\u59CB atom\\u3002\"), mdx(\"p\", null, \"\\u5B83\\u5728\\u4E34\\u65F6\\u6539\\u53D8\\u66F4\\u65B0\\u884C\\u4E3A\\u65F6\\u975E\\u5E38\\u6709\\u7528\\u3002\\n\\u53E6\\u5916\\uFF0C\\u5BF9\\u4E8E atom \\u7EA7\\u522B\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\uFF0C\\u53EF\\u4EE5\\u8003\\u8651\\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../utilities/reducer.mdx\"\n  }, \"atomWithReducer\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { useCallback } from 'react'\\nimport { useAtom } from 'jotai'\\nimport type { PrimitiveAtom } from 'jotai'\\n\\nexport function useReducerAtom<Value, Action>(\\n  anAtom: PrimitiveAtom<Value>,\\n  reducer: (v: Value, a: Action) => Value,\\n) {\\n  const [state, setState] = useAtom(anAtom)\\n  const dispatch = useCallback(\\n    (action: Action) => setState((prev) => reducer(prev, action)),\\n    [setState, reducer],\\n  )\\n  return [state, dispatch] as const\\n}\\n\")), mdx(\"h3\", null, \"\\u793A\\u4F8B\\u4F7F\\u7528 {#example-usage}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom } from 'jotai'\\n\\nconst countReducer = (prev, action) => {\\n  if (action.type === 'inc') return prev + 1\\n  if (action.type === 'dec') return prev - 1\\n  throw new Error('unknown action type')\\n}\\n\\nconst countAtom = atom(0)\\n\\nconst Counter = () => {\\n  const [count, dispatch] = useReducerAtom(countAtom, countReducer)\\n  return (\\n    <div>\\n      {count}\\n      <button onClick={() => dispatch({ type: 'inc' })}>+1</button>\\n      <button onClick={() => dispatch({ type: 'dec' })}>-1</button>\\n    </div>\\n  )\\n}\\n\")), mdx(CodeSandbox, {\n    id: \"eg0mw\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"d2249ac7-39c8-5a83-9b88-cc2644d136a8","slug":"recipes/use-reducer-atom","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}