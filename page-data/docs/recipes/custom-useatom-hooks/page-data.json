{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/custom-useatom-hooks","result":{"data":{"mdx":{"slug":"recipes/custom-useatom-hooks","frontmatter":{"title":"Custom useAtom hooks","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Custom useAtom hooks\",\n  \"nav\": 8.02,\n  \"keywords\": \"custom,hook\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u9875\\u9762\\u5C55\\u793A\\u4E86\\u521B\\u5EFA\\u4E0D\\u540C\\u5B9E\\u7528\\u51FD\\u6570\\u7684\\u65B9\\u6CD5\\u3002\\u5B9E\\u7528\\u51FD\\u6570\\u53EF\\u4EE5\\u8282\\u7701\\u4F60\\u7684\\u7F16\\u7801\\u65F6\\u95F4\\uFF0C\\u5E76\\u4E14\\u4F60\\u53EF\\u4EE5\\u4E3A\\u5176\\u4ED6\\u7528\\u9014\\u4FDD\\u7559\\u4F60\\u7684\\u57FA\\u7840\\u539F\\u5B50\\u3002\"), mdx(\"h3\", null, \"\\u5B9E\\u7528\\u5DE5\\u5177 {#utils}\"), mdx(\"h4\", null, \"useSelectAtom {#useselectatom}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { useAtomValue } from 'jotai'\\nimport { selectAtom } from 'jotai/utils'\\n\\n/* \\u5982\\u679C\\u5728\\u8FD9\\u91CC\\u521B\\u5EFA\\u4E86\\u4E00\\u4E2A\\u539F\\u5B50\\uFF0C\\u8BF7\\u4F7F\\u7528 `useMemo(() => atom(initValue), [initValue])` \\u66FF\\u4EE3\\u3002 */\\nexport function useSelectAtom(anAtom, keyFn) {\\n  return useAtomValue(selectAtom(anAtom, keyFn))\\n}\\n\\n// \\u5982\\u4F55\\u4F7F\\u7528\\u5B83\\nuseSelectAtom(\\n  useMemo(() => atom(initValue), [initValue]),\\n  useCallback((state) => state.prop, []),\\n)\\n\\n\")), mdx(\"p\", null, \"\\u8BF7\\u6CE8\\u610F\\uFF0C\\u5728\\u8FD9\\u79CD\\u60C5\\u51B5\\u4E0B\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keyFn\"), \" \\u5FC5\\u987B\\u662F\\u7A33\\u5B9A\\u7684\\uFF0C\\u8981\\u4E48\\u5728\\u6E32\\u67D3\\u5916\\u90E8\\u5B9A\\u4E49\\uFF0C\\u8981\\u4E48\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useCallback\"), \" \\u5305\\u88C5\\u3002\"), mdx(\"h4\", null, \"useFreezeAtom {#usefreezeatom}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { useAtom } from 'jotai'\\nimport { freezeAtom } from 'jotai/utils'\\n\\nexport function useFreezeAtom(anAtom) {\\n  return useAtom(freezeAtom(anAtom))\\n}\\n\")), mdx(\"h4\", null, \"useSplitAtom {#usesplitatom}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { useAtom } from 'jotai'\\nimport { splitAtom } from 'jotai/utils'\\n\\nexport function useSplitAtom(anAtom) {\\n  return useAtom(splitAtom(anAtom))\\n}\\n\")), mdx(\"h3\", null, \"extensions {#extensions}\"), mdx(\"h4\", null, \"useFocusAtom {#usefocusatom}\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { useAtom } from 'jotai'\\nimport { focusAtom } from 'jotai-optics'\\n\\n/* \\u5982\\u679C\\u5728\\u8FD9\\u91CC\\u521B\\u5EFA\\u4E86\\u4E00\\u4E2A\\u539F\\u5B50\\uFF0C\\u8BF7\\u4F7F\\u7528 `useMemo(() => atom(initValue), [initValue])` \\u66FF\\u4EE3\\u3002 */\\nexport function useFocusAtom(anAtom, keyFn) {\\n    return useAtom(focusAtom(anAtom, keyFn))\\n}\\n\\n// \\u5982\\u4F55\\u4F7F\\u7528\\u5B83\\nuseFocusAtom(anAtom) {\\n    useMemo(() => atom(initValue), [initValue]),\\n    useCallback((optic) => optic.prop('key'), [])\\n}\\n\")), mdx(\"h4\", null, \"CodeSandbox {#codesandbox}\"), mdx(CodeSandbox, {\n    id: \"y5wef8\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"p\", null, \"\\u8BF7\\u6CE8\\u610F\\uFF0C\\u5728\\u8FD9\\u79CD\\u60C5\\u51B5\\u4E0B\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keyFn\"), \" \\u5FC5\\u987B\\u662F\\u7A33\\u5B9A\\u7684\\uFF0C\\u8981\\u4E48\\u5728\\u6E32\\u67D3\\u5916\\u90E8\\u5B9A\\u4E49\\uFF0C\\u8981\\u4E48\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useCallback\"), \" \\u5305\\u88C5\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"f07b524d-702f-5081-9628-61b2a831ee25","slug":"recipes/custom-useatom-hooks","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}