{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/atom-with-toggle-and-storage","result":{"data":{"mdx":{"slug":"recipes/atom-with-toggle-and-storage","frontmatter":{"title":"atomWithToggleAndStorage","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"atomWithToggleAndStorage\",\n  \"nav\": 8.05,\n  \"keywords\": \"creators,storage\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithToggleAndStorage\"), \" \\u7C7B\\u4F3C\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithToggle\"), \"\\uFF0C\\u4F46\\u5B83\\u8FD8\\u4F1A\\u5728\\u72B6\\u6001\\u53D1\\u751F\\u53D8\\u5316\\u65F6\\u6301\\u4E45\\u5316\\u5230\\u7ED9\\u5B9A\\u7684\\u5B58\\u50A8\\u4E2D\\uFF0C\\u8FD9\\u662F\\u901A\\u8FC7 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../utilities/storage.mdx\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"atomWithStorage\")), \" \\u5B9E\\u73B0\\u7684\\u3002\")), mdx(\"p\", null, \"\\u4EE5\\u4E0B\\u662F\\u6E90\\u4EE3\\u7801\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { WritableAtom, atom } from 'jotai'\\nimport { atomWithStorage } from 'jotai/utils'\\n\\nexport function atomWithToggleAndStorage(\\n  key: string,\\n  initialValue?: boolean,\\n  storage?: any,\\n): WritableAtom<boolean, [boolean?], void> {\\n  const anAtom = atomWithStorage(key, initialValue, storage)\\n  const derivedAtom = atom(\\n    (get) => get(anAtom),\\n    (get, set, nextValue?: boolean) => {\\n      const update = nextValue ?? !get(anAtom)\\n      void set(anAtom, update)\\n    },\\n  )\\n\\n  return derivedAtom as WritableAtom<boolean, [boolean?], void>\\n}\\n\")), mdx(\"p\", null, \"\\u4EE5\\u53CA\\u5982\\u4F55\\u4F7F\\u7528\\u5B83\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atomWithToggleAndStorage } from 'XXX'\\n\\n// \\u521D\\u59CB\\u503C\\u5C06\\u8BBE\\u7F6E\\u4E3A false\\uFF0C\\u5E76\\u5728 localStorage \\u4E2D\\u4EE5 \\\"isActive\\\" \\u4E3A\\u952E\\u8FDB\\u884C\\u5B58\\u50A8\\nconst isActiveAtom = atomWithToggleAndStorage('isActive')\\n\")), mdx(\"p\", null, \"\\u5728\\u7EC4\\u4EF6\\u4E2D\\u7684\\u4F7F\\u7528\\u4E5F\\u4E0E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithToggle\"), \" \\u76F8\\u540C\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"cda8a8ee-1e85-578a-85ff-d8204fff5087","slug":"recipes/atom-with-toggle-and-storage","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}