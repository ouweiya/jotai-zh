{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/recipes/atom-with-refresh-and-default","result":{"data":{"mdx":{"slug":"recipes/atom-with-refresh-and-default","frontmatter":{"title":"atomWithRefreshAndDefault","description":null},"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"atomWithRefreshAndDefault\",\n  \"nav\": 8.07,\n  \"keywords\": \"creators,refresh,default\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\nconst CodeSandbox = makeShortcode(\"CodeSandbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8FD9\\u662F\\u5BF9 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../utilities/resettable.mdx#atomwithdefault\"\n  }, \"atomWithDefault\"), \" \\u7684\\u53E6\\u4E00\\u79CD\\u5B9E\\u73B0\")), mdx(\"h3\", null, \"\\u56DE\\u987E atomWithDefault \\u7684\\u884C\\u4E3A {#look-back-to-atomwithdefault-behavior}\"), mdx(\"p\", null, \"\\u5982\\u4F60\\u5728 atomWithDefault \\u90E8\\u5206\\u7684\\u793A\\u4F8B\\u4EE3\\u7801\\u4E2D\\u770B\\u5230\\u7684\\uFF0C\\u66F4\\u65B0\\u521B\\u5EFA\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"count2Atom = atomWithDefault((get) => get(count1Atom) * 2)\"), \" \\u540E\\uFF0C\\u4E24\\u4E2A\\u539F\\u5B50\\u7684\\u5173\\u7CFB\\u5C31\\u65AD\\u5F00\\u4E86\\u3002\\n\\u8BA9\\u6211\\u4EEC\\u786E\\u8BA4\\u4E00\\u4E0B\\u53D1\\u751F\\u4E86\\u4EC0\\u4E48\\uFF0C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u70B9\\u51FB \\\"increment count1\\\"\\uFF0C\\u7136\\u540E count1 \\u662F 2\\uFF0Ccount2 \\u662F 4\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"ol\", {\n    parentName: \"li\",\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u70B9\\u51FB \\\"increment count2\\\"\\uFF0C\\u7136\\u540E count1 \\u662F 2\\uFF0Ccount2 \\u662F 5 (\\u65AD\\u5F00\\u8FDE\\u63A5!!)\")))), mdx(\"p\", null, \"\\u66F4\\u65B0 count2Atom \\u540E\\uFF0C\\u8FD9\\u4E9B\\u539F\\u5B50\\u5C31\\u6CA1\\u6709\\u5173\\u7CFB\\u4E86\\u3002\\u6240\\u4EE5\\uFF0C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u70B9\\u51FB \\\"increment count1\\\"\\uFF0C\\u53EA\\u589E\\u52A0 count1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5373\\u4F7F\\u4F60\\u91CD\\u7F6E count2Atom\\uFF0C\\u8FD9\\u4E9B\\u4F9D\\u8D56\\u5173\\u7CFB\\u4E5F\\u6C38\\u8FDC\\u4E0D\\u4F1A\\u56DE\\u6765\")), mdx(\"h3\", null, \"\\u52A8\\u673A {#motivation}\"), mdx(\"p\", null, \"\\u5728\\u67D0\\u4E9B\\u60C5\\u51B5\\u4E0B\\uFF0C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65AD\\u5F00\\u8FDE\\u63A5\\u548C\\u91CD\\u7F6E\\u540E\\uFF0C\\u5B83\\u4EEC\\u5E94\\u8BE5\\u56DE\\u5230\\u5B83\\u4EEC\\u7684\\u5173\\u7CFB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5E94\\u8BE5\\u6839\\u636E\\u66F4\\u65B0\\u7684\\u539F\\u59CB\\u539F\\u5B50\\u91CD\\u7F6E\\u6D3E\\u751F\\u539F\\u5B50\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6211\\u4EEC\\u5E0C\\u671B\\u91CD\\u7F6E\\u6240\\u6709\\u6D3E\\u751F\\u539F\\u5B50\\uFF0C\\u4F46\\u53EA\\u60F3\\u5C3D\\u53EF\\u80FD\\u7B80\\u5355\\u5730\\u64CD\\u4F5C\")), mdx(\"p\", null, \"\\u6211\\u4EEC\\u5982\\u4F55\\u5B9E\\u73B0\\u8FD9\\u4E9B\\u60C5\\u51B5\\u5462\\uFF1F\\n\\u8FD9\\u91CC\\u6709\\u4E00\\u79CD\\u58F0\\u660E\\u5F0F\\u7684\\u65B9\\u5F0F\\u6765\\u521B\\u5EFA\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u63D0\\u4F9B\\u4E00\\u4E2A\\u53EF\\u5237\\u65B0\\u7684\\u539F\\u5B50\\uFF0C\\u800C\\u4E0D\\u662F atomWithDefault\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const refreshCountAtom = atom(0)\\n\\nconst baseDataAtom = atom(1) // \\u539F\\u59CB\\u6570\\u636E\\uFF0C\\u4F8B\\u5982 base count1Atom\\nconst dataAtom = atom(\\n  (get) => {\\n    get(refreshCountAtom) // \\u5B83\\u5728 atomWithRefresh \\u4E2D\\u5F15\\u5165\\n    return get(baseDataAtom)\\n  },\\n  (get, set, update) => {\\n    set(baseDataAtom, update)\\n  },\\n)\\n\\nconst atomWithRefreshAndDefault = (refreshAtom, getDefault) => {\\n  const overwrittenAtom = atom(null)\\n  return atom(\\n    (get) => {\\n      const lastState = get(overwrittenAtom)\\n      if (lastState && lastState.refresh === get(refreshAtom)) {\\n        return lastState.value\\n      }\\n      return getDefault(get)\\n    },\\n    (get, set, update) => {\\n      set(overwrittenAtom, { refresh: get(refreshAtom), value: update })\\n    },\\n  )\\n}\\n\\n// \\u8FD9\\u662F `atomWithDefault((get) => get(count1Atom) * 2)` \\u7684\\u66FF\\u4EE3\\u54C1\\nconst refreshableAtom = atomWithRefreshAndDefault(\\n  refreshCountAtom,\\n  (get) => get(dataAtom) * 2,\\n)\\n\\n// \\u4F60\\u53EF\\u4EE5\\u901A\\u8FC7\\u66F4\\u65B0\\u4E00\\u4E2A\\u539F\\u5B50\\u6765\\u91CD\\u7F6E\\nconst resetRootAtom = atom(null, (get, set) => {\\n  set(refreshCountAtom, get(refreshCountAtom) + 1)\\n})\\n\")), mdx(CodeSandbox, {\n    id: \"tcx2mk\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"5971d066-4316-519c-adfa-6059e58a2ec5","slug":"recipes/atom-with-refresh-and-default","__params":{"slug":"recipes"}}},"staticQueryHashes":["171421096","930225796"]}