{"version":3,"file":"component---src-pages-index-js-dff8e64c792010d2dbb6.js","mappings":"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","sources":["webpack://jotai-website/./src/components/meta.js","webpack://jotai-website/./src/components/core-demo.js","webpack://jotai-website/./src/components/extensions-demo.js","webpack://jotai-website/./src/components/headline.js","webpack://jotai-website/./src/components/intro.js","webpack://jotai-website/./src/components/external-link.js","webpack://jotai-website/./src/components/logo-cloud.js","webpack://jotai-website/./src/components/tabs.js","webpack://jotai-website/./src/components/utilities-demo.js","webpack://jotai-website/./src/pages/index.js"],"sourcesContent":["import { graphql, useStaticQuery, withPrefix } from 'gatsby';\r\n\r\nexport const Meta = ({ lang = 'zh-Hans', title, description, uri }) => {\r\n  const data = useStaticQuery(staticQuery);\r\n\r\n  const { site } = data;\r\n\r\n  const siteTitle = site.siteMetadata.title;\r\n  const siteUrl = site.siteMetadata.siteUrl;\r\n  const siteIcon = withPrefix('/favicon.svg');\r\n  const socialMediaCardImage = `https://cdn.candycode.com/jotai/jotai-opengraph-v2.png`;\r\n  const shortName = site.siteMetadata.shortName;\r\n\r\n  const pageTitle = title ? `${title} — ${title.length <= 10 ? siteTitle : shortName}` : siteTitle;\r\n  const pageDescription = description || site.siteMetadata.description;\r\n  const pageUrl = uri ? `${siteUrl}/${uri}` : siteUrl;\r\n\r\n  return (\r\n    <>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"description\" content={pageDescription} />\r\n      <meta property=\"og:locale\" content={lang} />\r\n      <meta property=\"og:site_name\" content={shortName} />\r\n      <meta property=\"og:title\" content={pageTitle} />\r\n      <meta property=\"og:description\" content={pageDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:image\" content={socialMediaCardImage} />\r\n      <meta property=\"og:image:url\" content={socialMediaCardImage} />\r\n      <meta property=\"og:image:secure_url\" content={socialMediaCardImage} />\r\n      <meta property=\"og:image:width\" content=\"1200\" />\r\n      <meta property=\"og:image:height\" content=\"630\" />\r\n      <meta property=\"og:url\" content={pageUrl} />\r\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n      <link rel=\"icon\" type=\"image/svg+xml\" href={siteIcon} />\r\n      <link rel=\"canonical\" href={pageUrl} />\r\n      <link rel=\"dns-prefetch\" href=\"appid-dsn.algolia.net\" />\r\n      <link rel=\"preconnect\" href=\"https://98qz5x9lgr-dsn.algolia.net\" crossOrigin=\"true\" />\r\n      <link rel=\"preconnect\" href=\"https://cdn.candycode.com\" crossOrigin=\"true\" />\r\n      <link rel=\"preconnect\" href=\"https://storage.googleapis.com\" crossOrigin=\"true\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst staticQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n        shortName\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useAtom } from 'jotai';\r\nimport { textAtom, uppercaseAtom } from '../atoms/index.js';\r\nimport { Code } from '../components/code.js';\r\n\r\nexport const CoreDemo = () => {\r\n  const Input = () => {\r\n    const [text, setText] = useAtom(textAtom);\r\n\r\n    return (\r\n      <input\r\n        value={text}\r\n        onChange={(event) => setText(event.target.value)}\r\n        className=\"w-full bg-transparent focus:!ring-transparent !border-none\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const Uppercase = () => {\r\n    const [uppercase] = useAtom(uppercaseAtom);\r\n\r\n    return <span className=\"flex-shrink-0 font-bold\">{uppercase}</span>;\r\n  };\r\n\r\n  const code = `import { atom, useAtom } from 'jotai'\r\n\r\n// 创建你的原子和派生物\r\nconst textAtom = atom('hello')\r\nconst uppercaseAtom = atom(\r\n  (get) => get(textAtom).toUpperCase()\r\n)\r\n\r\n// 在你的应用程序的任何地方使用它们\r\nconst Input = () => {\r\n  const [text, setText] = useAtom(textAtom)\r\n  const handleChange = (e) => setText(e.target.value)\r\n  return (\r\n    <input value={text} onChange={handleChange} />\r\n  )\r\n}\r\n\r\nconst Uppercase = () => {\r\n  const [uppercase] = useAtom(uppercaseAtom)\r\n  return (\r\n    <div>Uppercase: {uppercase}</div>\r\n  )\r\n}\r\n\r\n// 现在你有了组件\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Input />\r\n      <Uppercase />\r\n    </>\r\n  )\r\n}`;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-8 text-sm\">\r\n        <div className=\"flex items-center rounded-lg border border-gray-300 bg-white px-4 py-2 text-lg focus-within:ring focus-within:ring-blue-400 dark:border-gray-800 dark:bg-gray-950 dark:focus-within:ring-teal-700\">\r\n          <Input />\r\n          <Uppercase />\r\n        </div>\r\n      </div>\r\n      <Code>{code}</Code>\r\n    </>\r\n  );\r\n};\r\n","import { useAtom } from 'jotai';\r\nimport { countAtom } from '../atoms/index.js';\r\nimport { Button } from '../components/button.js';\r\nimport { Code } from '../components/code.js';\r\n\r\nexport const ExtensionsDemo = () => {\r\n  const [count, setCount] = useAtom(countAtom);\r\n\r\n  const increment = () => setCount((c) => (c = c + 1));\r\n\r\n  const code = `import { useAtom } from 'jotai'\r\nimport { atomWithImmer } from 'jotai-immer'\r\n\r\n// 使用基于 immer 的写函数创建一个新的原子\r\nconst countAtom = atomWithImmer(0)\r\n\r\nconst Counter = () => {\r\n  const [count] = useAtom(countAtom)\r\n  return (\r\n    <div>count: {count}</div>\r\n  )\r\n}\r\n\r\nconst Controls = () => {\r\n  // setCount === update: (draft: Draft<Value>) => void\r\n  const [, setCount] = useAtom(countAtom)\r\n  const increment = () => setCount((c) => (c = c + 1))\r\n  return (\r\n    <button onClick={increment}>+1</button>\r\n  )\r\n}`;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center space-x-8 pt-4 lg:pt-8 lg:pb-4\">\r\n        <Button onClick={increment} icon=\"plus\" className=\"focus:ring\">\r\n          增量\r\n        </Button>\r\n        <span className=\"text-3xl font-bold ordinal slashed-zero tabular-nums\">{count}</span>\r\n      </div>\r\n      <Code>{code}</Code>\r\n    </>\r\n  );\r\n};\r\n","import cx from 'classnames';\r\n\r\nexport const Headline = ({ className = '', children }) => {\r\n  return (\r\n    <div\r\n      className={cx(\r\n        'text-4xl font-bold tracking-tight text-black dark:text-gray-50 lg:text-7xl lg:text-gray-300',\r\n        className,\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { InlineCode } from '../components/inline-code.js';\r\nimport { Jotai } from '../components/jotai.js';\r\n\r\nexport const Intro = () => {\r\n  return (\r\n    <header>\r\n      <Jotai className=\"max-w-xs lg:hidden\" />\r\n      <div className=\"mt-8 flex items-center space-x-4 sm:space-x-8 sm:px-16 lg:mt-0 lg:px-0\">\r\n        <div className=\"relative w-1/3 max-w-[215px] lg:w-1/4\">\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/jotai-mascot.png\"\r\n            title=\"Atomikku, the Jotai mascot\"\r\n            alt=\"Atomikku, the Jotai mascot\"\r\n          />\r\n          <div className=\"absolute -right-2 -bottom-3 z-20 inline-flex h-10 w-10 items-center justify-center rounded-full bg-black text-lg font-black text-white shadow-md dark:bg-white dark:text-black dark:!shadow-none lg:-right-4 lg:-bottom-6 lg:h-[4.5rem] lg:w-[4.5rem] lg:text-[2rem]\">\r\n            v2\r\n          </div>\r\n        </div>\r\n        <div className=\"relative w-2/3 space-y-4 rounded-xl bg-gray-100 p-4 text-sm leading-snug text-gray-800 dark:bg-gray-900 dark:text-gray-300 sm:text-base md:text-lg lg:w-3/4 lg:p-8 lg:leading-normal after:absolute after:left-0 after:top-1/2 after:w-0 after:h-0 after:-ml-6 after:-mt-4 after:border-solid after:border-transparent after:border-t-[16px] after:border-r-[24px] after:border-b-[16px] after:border-l-0 after:border-r-[#f5f5f5] after:dark:!border-r-[#171717]\">\r\n          <div>欢迎使用 Jotai v2！</div>\r\n          <div>\r\n            完全兼容 React 18 和即将推出的 <InlineCode dark>use</InlineCode> 钩子。\r\n            现在有一个可以在 React 外部使用的存储接口。\r\n          </div>\r\n          <div>在下面享受新的“入门”体验！</div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export const ExternalLink = ({ to, children, ...rest }) => {\r\n  return (\r\n    <a href={to} target=\"_blank\" rel=\"noreferrer\" {...rest}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import cx from 'classnames';\r\nimport { ExternalLink } from '../components/external-link.js';\r\n\r\nexport const LogoCloud = () => {\r\n  return (\r\n    <div className=\"mx-auto grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-6 2xl:-mx-6\">\r\n      <Logo to=\"https://about.meta.com/\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/meta-current.svg\"\r\n          alt=\"\"\r\n          className=\"w-full opacity-50 transition duration-300 ease-in-out dark:invert\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/meta-color.svg\"\r\n            alt=\"\"\r\n            className=\"w-full\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n      <Logo to=\"https://candycode.com/\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/candycode-current.svg\"\r\n          alt=\"candycode alternative graphic design web development agency\"\r\n          className=\"aspect-[16/9] w-full opacity-50 transition duration-300 ease-in-out dark:invert\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/candycode-color.svg\"\r\n            alt=\"\"\r\n            className=\"aspect-[16/9] w-full\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n      <Logo to=\"https://www.adobe.com/\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/adobe-current.svg\"\r\n          alt=\"Adobe\"\r\n          className=\"w-full px-1 opacity-50 transition duration-300 ease-in-out dark:invert lg:px-2\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/adobe-color.svg\"\r\n            alt=\"\"\r\n            className=\"w-full px-1 lg:px-2\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n      <Logo to=\"https://ping.gg\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/ping-current.svg\"\r\n          alt=\"Ping Labs\"\r\n          className=\"aspect-[24/9] w-full opacity-50 transition duration-300 ease-in-out dark:invert\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/ping-color.svg\"\r\n            alt=\"\"\r\n            className=\"aspect-[24/9] w-full\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n      <Logo to=\"https://www.tiktok.com/\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/tiktok-current.svg\"\r\n          alt=\"TokTok\"\r\n          className=\"w-full px-1 opacity-50 transition duration-300 ease-in-out dark:invert lg:px-2\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/tiktok-color.svg\"\r\n            alt=\"\"\r\n            className=\"w-full px-1 lg:px-2\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n      <Logo to=\"https://uniswap.org/\">\r\n        <img\r\n          src=\"https://cdn.candycode.com/jotai/logos/uniswap-current.svg\"\r\n          alt=\"Uniswap\"\r\n          className=\"aspect-[16/9] w-full opacity-50 transition duration-300 ease-in-out dark:invert\"\r\n        />\r\n        <HoverLogo>\r\n          <img\r\n            src=\"https://cdn.candycode.com/jotai/logos/uniswap-color.svg\"\r\n            alt=\"\"\r\n            className=\"aspect-[16/9] w-full\"\r\n            aria-hidden\r\n          />\r\n        </HoverLogo>\r\n      </Logo>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Logo = ({ to, className = '', children }) => {\r\n  return (\r\n    <ExternalLink\r\n      to={to}\r\n      className={cx(\r\n        'group relative flex aspect-video items-center justify-center rounded-lg bg-gray-100 px-6 transition duration-300 ease-in-out hover:!bg-black dark:bg-gray-900',\r\n        className,\r\n      )}\r\n    >\r\n      {children}\r\n    </ExternalLink>\r\n  );\r\n};\r\n\r\nconst HoverLogo = ({ children }) => {\r\n  return (\r\n    <div className=\"absolute inset-0 flex h-full w-full items-center justify-center px-6 opacity-0 transition duration-300 ease-in-out group-hover:opacity-100 text-white\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nexport const Tabs = ({ tabs = {} }) => {\r\n  const tabContents = useMemo(() => Object.values(tabs), [tabs]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"space-y-12\">\r\n        {tabContents.map((content) => (\r\n          <div>{content}</div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import cx from 'classnames';\r\nimport { useAtom } from 'jotai';\r\nimport { darkModeAtom } from '../atoms/index.js';\r\nimport { ClientOnly } from '../components/client-only.js';\r\nimport { Code } from '../components/code.js';\r\n\r\nexport const UtilitiesDemo = () => {\r\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\r\n\r\n  const code = `import { useAtom } from 'jotai'\r\nimport { atomWithStorage } from 'jotai/utils'\r\n\r\n// 设置字符串键和初始值\r\nconst darkModeAtom = atomWithStorage('darkMode', false)\r\n\r\nconst Page = () => {\r\n  // 像使用任何其他原子一样使用持久化状态\r\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom)\r\n  const toggleDarkMode = () => setDarkMode(!darkMode)\r\n  return (\r\n    <>\r\n      <h1>Welcome to {darkMode ? 'dark' : 'light'} mode!</h1>\r\n      <button onClick={toggleDarkMode}>toggle theme</button>\r\n    </>\r\n  )\r\n}`;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-8\">\r\n        <ClientOnly>\r\n          <div\r\n            className={cx(\r\n              darkMode ? 'bg-gray-900 text-gray-100' : 'bg-gray-100 text-gray-900',\r\n              'flex items-center space-x-4 rounded-xl p-4 transition duration-300 ease-in-out lg:space-x-8 lg:p-8',\r\n            )}\r\n          >\r\n            <div>\r\n              <button\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                className={cx(\r\n                  darkMode ? 'bg-gray-700' : 'bg-gray-300',\r\n                  'dark:focus-teal-700 relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-opacity duration-200 ease-in-out focus:outline-none focus:ring focus:ring-blue-400',\r\n                )}\r\n              >\r\n                <span\r\n                  className={cx(\r\n                    darkMode ? 'translate-x-5' : 'translate-x-0',\r\n                    'pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out',\r\n                  )}\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"text-sm leading-relaxed lg:text-lg\">\r\n              此切换将通过 localStorage 在用户会话之间持久化。\r\n            </div>\r\n          </div>\r\n        </ClientOnly>\r\n      </div>\r\n      <Code>{code}</Code>\r\n    </>\r\n  );\r\n};\r\n","import { Code } from '../components/code.js';\r\nimport { CoreDemo } from '../components/core-demo.js';\r\nimport { ExtensionsDemo } from '../components/extensions-demo.js';\r\nimport { Headline } from '../components/headline.js';\r\nimport { InlineCode } from '../components/inline-code.js';\r\nimport { Intro } from '../components/intro.js';\r\nimport { LogoCloud } from '../components/logo-cloud.js';\r\nimport { Meta } from '../components/meta.js';\r\nimport { Tabs } from '../components/tabs.js';\r\nimport { UtilitiesDemo } from '../components/utilities-demo.js';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <>\r\n      <Intro />\r\n      <div className=\"mt-12 space-y-12 lg:mt-24 lg:space-y-24\">\r\n        <div className=\"space-y-4\">\r\n          <Headline>介绍</Headline>\r\n          <p>Jotai 采用原子化的方法进行全局 React 状态管理。</p>\r\n          <p>\r\n            通过组合原子来构建状态，渲染会根据原子依赖自动优化。这解决了 React 上下文的额外重新渲染问题，消除了对 memoization 的需要，并在保持声明式编程模型的同时，提供了类似于信号的开发者体验。\r\n          </p>\r\n          <p>\r\n            它可以从简单的 <InlineCode>useState</InlineCode> 替代品扩展到具有复杂需求的企业级 TypeScript 应用程序。此外，还有许多实用工具和扩展可以帮助你！\r\n          </p>\r\n          <p>Jotai 在这些创新公司的生产环境中得到了信任。</p>\r\n          <LogoCloud />\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <Headline>入门</Headline>\r\n          <p className=\"!mb-8\">\r\n            这将引导你创建一个简单的 Jotai 应用程序的过程。从安装开始，然后探索核心 API 的基础知识，最后在 React 框架中进行服务器端渲染。\r\n          </p>\r\n          <Tabs tabs={gettingStartedTabs} />\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <Headline>API 概览</Headline>\r\n          <Tabs tabs={apiTabs} />\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <Headline>了解更多</Headline>\r\n          <p>查看 Jotai 创建者 Daishi 的免费 Egghead 课程。</p>\r\n          <a\r\n            href=\"https://egghead.io/courses/manage-application-state-with-jotai-atoms-2c3a29f0\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"mt-4 block\"\r\n          >\r\n            <img\r\n              src=\"https://cdn.candycode.com/jotai/jotai-course-banner.jpg\"\r\n              className=\"block rounded-md shadow-lg dark:!shadow-none sm:rounded-lg\"\r\n              alt=\"Jotai course\"\r\n              title=\"Jotai course\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst apiTabs = {\r\n  Core: (\r\n    <section>\r\n      <h2>核心</h2>\r\n      <p>\r\n        Jotai的API非常简洁，以TypeScript为主。它的使用就像React的内置<InlineCode>useState</InlineCode>钩子一样简单，但所有的状态都可以全局访问，\r\n        派生状态易于实现，且自动消除了不必要的重新渲染。\r\n      </p>\r\n      <CoreDemo />\r\n    </section>\r\n  ),\r\n  Utilities: (\r\n    <section>\r\n      <h2>实用工具</h2>\r\n      <p>\r\n        Jotai包还包括一个<InlineCode>jotai/utils</InlineCode>包。这些额外的函数增加了在localStorage中持久化原子的支持，服务端渲染时的原子水合，\r\n        创建具有Redux-like的reducers和action类型的原子等等。\r\n      </p>\r\n      <UtilitiesDemo />\r\n    </section>\r\n  ),\r\n  Extensions: (\r\n    <section>\r\n      <h2>扩展</h2>\r\n      <p>\r\n        还有每个官方扩展的单独包：tRPC，Immer，Query，XState，URQL，Optics，Relay，location，molecules，cache等等。\r\n      </p>\r\n      <p>\r\n        一些扩展提供了新的原子类型，带有替代的写函数，例如<InlineCode>atomWithImmer</InlineCode>（Immer）或<InlineCode>atomWithMachine</InlineCode>（XState）。\r\n      </p>\r\n      <p>\r\n        其他的提供了新的原子类型，带有双向数据绑定，例如<InlineCode>atomWithLocation</InlineCode>或<InlineCode>atomWithHash</InlineCode>。\r\n      </p>\r\n      <ExtensionsDemo />\r\n    </section>\r\n  ),\r\n};\r\n\r\nconst gettingStartedTabs = {\r\n  'Installation': (\r\n    <section>\r\n      <h2>安装</h2>\r\n      <p>首先将 Jotai 作为依赖添加到你的 React 项目中。</p>\r\n      <Code language=\"bash\">{`# npm\r\nnpm i jotai\r\n\r\n# yarn\r\nyarn add jotai\r\n\r\n# pnpm\r\npnpm add jotai\r\n`}</Code>\r\n    </section>\r\n  ),\r\n  'Create atoms': (\r\n    <section>\r\n      <h2>创建原子</h2>\r\n      <p>首先创建原始和派生的原子来构建状态。</p>\r\n      <h3>原始原子</h3>\r\n      <p>\r\n        原始原子可以是任何类型：布尔值，数字，字符串，对象，数组，集合，映射等等。\r\n      </p>\r\n      <Code>{`import { atom } from 'jotai'\r\n\r\nconst countAtom = atom(0)\r\n\r\nconst countryAtom = atom('Japan')\r\n\r\nconst citiesAtom = atom(['Tokyo', 'Kyoto', 'Osaka'])\r\n\r\nconst animeAtom = atom([\r\n  {\r\n    title: 'Ghost in the Shell',\r\n    year: 1995,\r\n    watched: true\r\n  },\r\n  {\r\n    title: 'Serial Experiments Lain',\r\n    year: 1998,\r\n    watched: false\r\n  }\r\n])`}</Code>\r\n      <h3>派生原子</h3>\r\n      <p>派生原子可以在返回其自身的值之前读取其他原子的值。</p>\r\n      <Code>{`const progressAtom = atom((get) => {\r\n  const anime = get(animeAtom)\r\n  return anime.filter((item) => item.watched).length / anime.length\r\n})`}</Code>\r\n    </section>\r\n  ),\r\n  'Use atoms': (\r\n    <section>\r\n      <h2>使用原子</h2>\r\n      <p>然后在 React 组件中使用原子来读取或写入状态。</p>\r\n      <h3>在同一组件中读取和写入</h3>\r\n      <p>\r\n        当在同一组件中同时读取和写入原子时，为了简单起见，使用组合的\r\n        <InlineCode>useAtom</InlineCode> hook。\r\n      </p>\r\n      <Code>{`import { useAtom } from 'jotai'\r\n\r\nconst AnimeApp = () => {\r\n  const [anime, setAnime] = useAtom(animeAtom)\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {anime.map((item) => (\r\n          <li key={item.title}>{item.title}</li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={() => {\r\n        setAnime((anime) => [\r\n          ...anime,\r\n          {\r\n            title: 'Cowboy Bebop',\r\n            year: 1998,\r\n            watched: false\r\n          }\r\n        ])\r\n      }}>\r\n        Add Cowboy Bebop\r\n      </button>\r\n    <>\r\n  )\r\n}`}</Code>\r\n      <h3>从不同的组件读取和写入</h3>\r\n      <p>\r\n        当原子值只被读取或写入时，使用单独的\r\n        <InlineCode>useAtomValue</InlineCode> 和 <InlineCode>useSetAtom</InlineCode> 钩子来\r\n        优化重新渲染。\r\n      </p>\r\n      <Code>{`import { useAtomValue, useSetAtom } from 'jotai'\r\n\r\nconst AnimeList = () => {\r\n  const anime = useAtomValue(animeAtom)\r\n\r\n  return (\r\n    <ul>\r\n      {anime.map((item) => (\r\n        <li key={item.title}>{item.title}</li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst AddAnime = () => {\r\n  const setAnime = useSetAtom(animeAtom)\r\n\r\n  return (\r\n    <button onClick={() => {\r\n      setAnime((anime) => [\r\n        ...anime,\r\n        {\r\n          title: 'Cowboy Bebop',\r\n          year: 1998,\r\n          watched: false\r\n        }\r\n      ])\r\n    }}>\r\n      Add Cowboy Bebop\r\n    </button>\r\n  )\r\n}\r\n\r\nconst ProgressTracker = () => {\r\n  const progress = useAtomValue(progressAtom)\r\n\r\n  return (\r\n    <div>{Math.trunc(progress * 100)}% watched</div>\r\n  )\r\n}\r\n\r\nconst AnimeApp = () => {\r\n  return (\r\n    <>\r\n      <AnimeList />\r\n      <AddAnime />\r\n      <ProgressTracker />\r\n    </>\r\n  )\r\n}`}</Code>\r\n    </section>\r\n  ),\r\n  'SSR': (\r\n    <section>\r\n      <h2>服务器端渲染</h2>\r\n      <p>\r\n        如果使用 Next.js 或 Gatsby 等框架进行服务器端渲染，请确保至少在根部使用一个 Provider 组件。\r\n      </p>\r\n      <Code>{`import { Provider } from 'jotai'\r\n\r\n// Placement is framework-specific (see below)\r\n<Provider>\r\n  {...}\r\n</Provider>\r\n`}</Code>\r\n      <h3>Next.js (应用目录)</h3>\r\n      <p>\r\n        在一个单独的客户端组件中创建 provider。然后将 provider 导入到根<InlineCode>layout.js</InlineCode>服务器组件中。\r\n      </p>\r\n      <Code>{`// providers.js (app directory)\r\n'use client'\r\n\r\nimport { Provider } from 'jotai'\r\n\r\nexport default function Providers({ children }) {\r\n  return (\r\n    <Provider>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\n\r\n// layout.js (app directory)\r\nimport Providers from './providers'\r\n\r\nexport default function RootLayout({ children }) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <body>\r\n        <Providers>\r\n          {children}\r\n        </Providers>\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n`}</Code>\r\n      <h3>Next.js (页面目录)</h3>\r\n      <p>\r\n        在 <InlineCode>_app.js</InlineCode> 中创建 provider。\r\n      </p>\r\n      <Code>{`// _app.js (pages directory)\r\nimport { Provider } from 'jotai'\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  return (\r\n    <Provider>\r\n      <Component {...pageProps} />\r\n    </Provider>\r\n  )\r\n}\r\n`}</Code>\r\n      <h3>Gatsby</h3>\r\n      <p>\r\n        在 <InlineCode>gatsby-shared.js</InlineCode> 文件中创建 provider，以在 <InlineCode>gatsby-browser.js</InlineCode> 和\r\n        <InlineCode>gatsby-ssr.js</InlineCode> 之间共享代码。使用 <InlineCode>wrapRootElement</InlineCode> API\r\n        来放置 provider。\r\n      </p>\r\n      <Code>{`\r\n// gatsby-shared.js\r\nimport { Provider } from 'jotai'\r\n\r\nexport const wrapRootElement = ({ element }) => {\r\n  return (\r\n    <Provider>\r\n      {element}\r\n    </Provider>\r\n  )\r\n}\r\n\r\n// gatsby-browser.js\r\nexport { wrapRootElement } from './gatsby-shared'\r\n\r\n// gatsby-ssr.js\r\nexport { wrapRootElement } from './gatsby-shared'\r\n`}</Code>\r\n    </section>\r\n  ),\r\n};\r\n\r\nexport const Head = () => {\r\n  return <Meta />;\r\n};\r\n"],"names":["Meta","_ref","lang","title","description","uri","data","useStaticQuery","staticQuery","site","siteTitle","siteMetadata","siteUrl","siteIcon","withPrefix","socialMediaCardImage","shortName","pageTitle","length","pageDescription","pageUrl","_jsxs","_Fragment","children","_jsx","property","content","rel","type","href","crossOrigin","CoreDemo","Input","text","setText","useAtom","textAtom","value","onChange","event","target","className","Uppercase","uppercase","uppercaseAtom","Code","ExtensionsDemo","count","setCount","countAtom","Button","onClick","increment","c","icon","Headline","cx","Intro","Jotai","src","alt","InlineCode","dark","ExternalLink","to","rest","_objectWithoutProperties","_excluded","_objectSpread","LogoCloud","Logo","HoverLogo","_ref2","Tabs","tabs","tabContents","useMemo","Object","values","map","UtilitiesDemo","darkMode","setDarkMode","darkModeAtom","ClientOnly","HomePage","gettingStartedTabs","apiTabs","Core","Utilities","Extensions","language","Head"],"sourceRoot":""}